# -*- coding: utf-8 -*-
"""Longest Substring

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1b3bN-V-Vfhn0q4t72EeU4SVjzU5IcxUL
"""

def longest_substring_length(s):
    # Dictionary to store the index of the last occurrence of each character
    last_occurrence = {}

    # Variables to keep track of the start of the current substring and the maximum length
    start = 0
    max_length = 0

    for i, char in enumerate(s):
        if char in last_occurrence and last_occurrence[char] >= start:
            # If the character is repeated, update the start of the substring
            start = last_occurrence[char] + 1

        # Update the last occurrence index of the character
        last_occurrence[char] = i

        # Update the maximum length if the current substring is longer
        max_length = max(max_length, i - start + 1)

    return max_length
inputVal = input()
outputVal = longest_substring_length(inputVal)
print(outputVal)